.base {
  position: relative;
  overflow: hidden;

  composes: flexItem flexColumn from './shared/_style.css';
}

.overflow {
  overflow-y: auto;
}

.list {
  grid-template-columns: 1em 3em 1fr;
  grid-column-gap: 1em;

  composes: base;
}

.grid {
  composes: base;
}

.listWrap {
  grid-template-columns: inherit;
  grid-column-gap: inherit;

  composes: overflow;
}

.gridWrap {
  height: 100%;

  composes: overflow;
}

.list .scrollArea {
  flex: 1;
  grid-template-columns: inherit;
  grid-column-gap: inherit;
}

.grid .scrollArea {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
  grid-column-gap: 1em;
  grid-row-gap: 1.5em;
  padding: 1.5em 1em;
  font-size: 11px;
  justify-items: center;
}

.list .empty {
  padding: 1em;
}

.grid .empty {
  position: absolute;
  padding: 2em;
  width: 100%;
}

.loadMore {
  position: relative;
  width: 100%;
  line-height: 4em;
  text-align: center;

  composes: textAccent from './shared/_style.css';
}

.loadMore span {
  position: absolute;
  cursor: pointer;
  left: 0;
  right: 0;
}

.loadMore span:hover {
  text-decoration: underline;
}

.list.showListDetails {
  grid-template-columns: 1em 3em 1fr 9em 16em 2.25em;
}

/* Media queries */

@value bp-mobile from "./shared/_style.css";
@value bp-tablet from "./shared/_style.css";

@media screen and (min-width: bp-mobile) {
  .grid .scrollArea {
    grid-column-gap: 2em;
    grid-row-gap: 2em;
    padding: 2em;
    font-size: inherit;
  }
}

@media screen and (min-width: bp-tablet) {
  .list {
    grid-column-gap: 1.5em;
  }
}
